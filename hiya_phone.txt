1
11
21
1211
111221
312211

aab

// lookAndSay(startTerm, numIters): endTerm

/**
 * numIters >= 0
 * 
 **/
public List<String> lookAndSay(String startTerm, int numIters) {
    String curr = startTerm;
    for (int i = 0; i < numIters; i++) {
        String next = pattern(curr)
        System.out.println(next)
        curr = next;
    }
}

private String pattern(String input) {
    if (input == null || input.length() == 0) {
        return "";
    }
    String result = "";
    int count = 0;
    char current = input.charAt(0);
    for (int i = 0; i < input.length(); i++){ 
        if (current == input.charAt(i)) {
            count += 1;
        } else {
            result += "" + count + "" + current;
            count = 1;
            current = input.charAt(i);
        }
    }
    result += "" + count + "" + current;
    return result;
}

// This is the text editor interface. 
// Anything you type or change here will be seen by the other person in real time.
// [1, 1, 2, 3, 4] [2, 3, 4, 5] -> [1, 1, 5]
// [1, 1, 2, 3, 4] [1, 2, 3, 4, 5, 1, 1] -> [1, 5]


// test
null, null -> []
[][] -> []
[1,2,3][] -> [1,2,3]
[][1,2,3] -> [1,2,3]
[1,1,1][1,1] -> [1]
[1,1][1,1,1] -> [1]
[1, 1, 2, 3, 4] [1, 2, 3, 4, 5, 1, 1, 2] -> [1, 2, 5]

 
public List<Integer> symmetricalDifference(List<Integer> l1, List<Integer> l2) {
    Map<Integer, Integer> map = new HashMap<Integer, Integer>();
    
    iterateList(l1, map, 1);
    iterateList(l2, map, -1);
    List<Integer> result = new ArrayList<Integer>();
    for (Integer key : map.keySet()) {
        int occurences = map.get(key);
        if (occurences < 0) {
            occurences *= -1;
        }
        for (int i = 0; i < occurences; i ++) {
            result.add(key);
        }
    }
    return result;
}

private void iterateList(List<Integer> list, Map<Integer, Integer> map, int add) {
    for (Integer i : list) {
        Integer curr = map.get(i);
        if (curr == null) {
            curr = 0;
        }
        map.put(i, curr + add);
    }
}